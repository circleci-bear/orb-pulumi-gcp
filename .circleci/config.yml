version: 2.1
orbs:
  alcide: alcideio/alcide-advisor@1.0.2
  gcp-cli: circleci/gcp-cli@1.0.6
  gcr: circleci/gcp-gcr@0.0.2
  k8s: circleci/kubernetes@0.3.0
  pulumi: pulumi/pulumi@1.0.1
  snyk: snyk/snyk@0.0.8
  microscanner: 'aquasecurity/microscanner@dev:0.1.1'
jobs:
  build_test:
    docker:
      - image: circleci/python:3.7.2
        environment:
          PIPENV_VENV_IN_PROJECT: 'true'
    steps:
      - checkout
      - run:
          name: Install Python Dependencies
          command: |
            pipenv install --skip-lock
      - snyk/scan
      - run:
          name: Run Tests
          command: |
            pipenv run pytest
  build_push_image:
    docker:
      - image: circleci/python:3.7.2
    steps:
      - checkout
      - setup_remote_docker:
          docker_layer_caching: false
      - run:
          name: Build and push Docker image
          command: |       
            pipenv install --skip-lock
            pipenv run pyinstaller -F hello_world.py
            echo 'export TAG=${CIRCLE_SHA1}' >> $BASH_ENV
            echo 'export IMAGE_NAME=orb-pulumi-gcp' >> $BASH_ENV
            source $BASH_ENV
            docker build -t $DOCKER_LOGIN/$IMAGE_NAME -t $DOCKER_LOGIN/$IMAGE_NAME:$TAG .
      - run:
          name: Push Docker image to Docker Hub
          command: |
            echo $DOCKER_PWD | docker login -u $DOCKER_LOGIN --password-stdin
            docker push $DOCKER_LOGIN/$IMAGE_NAME
  # scan_image:
  #   steps:
  #     - snyk/scan:
  #         requires:
  #           - build_push_image
  #         fail-on-issues: false
  #         monitor-on-build: true
  #         docker-image-name: $DOCKER_LOGIN/$IMAGE_NAME:$TAG
  #         target-file: "Dockerfile"
  #         project: ${CIRCLE_PROJECT_REPONAME}/${CIRCLE_BRANCH}
  #         organization: ${SNYK_CICD_ORGANIZATION}
  #     - microscanner/scan-image:
  #         requires:
  #           - build_push_image
  #         context: myContext
  #         image: 'myrepo/myimage:mytag'

  deploy_to_gcp:
    docker:
      - image: circleci/python:3.7.2
        environment:
          CLOUDSDK_PYTHON: '/usr/bin/python2.7'
          GOOGLE_SDK_PATH: '~/google-cloud-sdk/'
    parameters:
      cluster:
        description: The Kubernetes cluster name.
        type: string
    steps:
      - checkout
      - pulumi/login:
          access-token: ${PULUMI_ACCESS_TOKEN}
      - run:
          name: Install dependencies
          command: |
            cd ~/
            sudo pip install --upgrade pip==18.0 && pip install --user -r project/requirements.txt
            curl -o gcp-cli.tar.gz https://dl.google.com/dl/cloudsdk/channels/rapid/google-cloud-sdk.tar.gz
            tar -xzvf gcp-cli.tar.gz
            echo ${GOOGLE_CLOUD_KEYS} | base64 --decode --ignore-garbage > ${HOME}/project/pulumi/gcp/cicd_demo_gcp_creds.json
            ./google-cloud-sdk/install.sh  --quiet
            echo 'export PATH=$PATH:~/google-cloud-sdk/bin' >> $BASH_ENV
            source $BASH_ENV
            gcloud auth activate-service-account --key-file ${HOME}/project/pulumi/gcp/cicd_demo_gcp_creds.json
      - pulumi/update:
          stack: dev
          working_directory: ${HOME}/project/pulumi/gcp
      - k8s/install
      - run: |
          gcloud container clusters get-credentials cicd-app-22efd29
      - alcide/alcide_advisor_scan:
          report_format: html
          fail_on_critical: false
          alcide_apiserver: ''
          policy_profile: ''

      - run:
          name: Run Smoke Test against GKE
          command: |
            echo 'Initializing Smoke Tests on the GKE Cluster'
            ./tests/smoke_test
            echo "GKE Cluster Tested & Destroyed"
workflows:
  build_test_deploy:
    jobs:
      - build_test
      - build_push_image:
          requires:
            - build_test
      - deploy_to_gcp:
          requires:
          - build_push_image
          cluster: cicd-app-22efd29
